/*
 * NabooApi V1
 *
 * Here you have the first version of the naboo api to create checkout automatically
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TransactionRequest {
    #[serde(rename = "method_of_payment")]
    pub method_of_payment: Vec<models::Wallet>,
    #[serde(rename = "products", deserialize_with = "Option::deserialize")]
    pub products: Option<Vec<models::ProductModel>>,
    #[serde(rename = "success_url", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub success_url: Option<Option<String>>,
    #[serde(rename = "error_url", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub error_url: Option<Option<String>>,
    #[serde(rename = "is_escrow", skip_serializing_if = "Option::is_none")]
    pub is_escrow: Option<bool>,
    #[serde(rename = "is_merchant", skip_serializing_if = "Option::is_none")]
    pub is_merchant: Option<bool>,
}

impl TransactionRequest {
    pub fn new(method_of_payment: Vec<models::Wallet>, products: Option<Vec<models::ProductModel>>) -> TransactionRequest {
        TransactionRequest {
            method_of_payment,
            products,
            success_url: None,
            error_url: None,
            is_escrow: None,
            is_merchant: None,
        }
    }
}

