/*
 * NabooApi V1
 *
 * Here you have the first version of the naboo api to create checkout automatically
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TransactionResponse {
    #[serde(rename = "order_id")]
    pub order_id: String,
    #[serde(rename = "method_of_payment")]
    pub method_of_payment: Vec<String>,
    #[serde(rename = "amount", skip_serializing_if = "Option::is_none")]
    pub amount: Option<i32>,
    #[serde(rename = "amount_to_pay", skip_serializing_if = "Option::is_none")]
    pub amount_to_pay: Option<i32>,
    #[serde(rename = "currency")]
    pub currency: String,
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "transaction_status", skip_serializing_if = "Option::is_none")]
    pub transaction_status: Option<String>,
    #[serde(rename = "is_escrow", skip_serializing_if = "Option::is_none")]
    pub is_escrow: Option<bool>,
    #[serde(rename = "is_merchant", skip_serializing_if = "Option::is_none")]
    pub is_merchant: Option<bool>,
    #[serde(rename = "checkout_url")]
    pub checkout_url: String,
}

impl TransactionResponse {
    pub fn new(order_id: String, method_of_payment: Vec<String>, currency: String, created_at: String, checkout_url: String) -> TransactionResponse {
        TransactionResponse {
            order_id,
            method_of_payment,
            amount: None,
            amount_to_pay: None,
            currency,
            created_at,
            transaction_status: None,
            is_escrow: None,
            is_merchant: None,
            checkout_url,
        }
    }
}

