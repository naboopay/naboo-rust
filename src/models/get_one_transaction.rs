/*
 * NabooApi V1
 *
 * Here you have the first version of the naboo api to create checkout automatically
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetOneTransaction {
    #[serde(rename = "order_id")]
    pub order_id: String,
    #[serde(rename = "method_of_payment")]
    pub method_of_payment: Vec<models::Wallet>,
    #[serde(rename = "amount")]
    pub amount: i32,
    #[serde(rename = "amount_to_pay")]
    pub amount_to_pay: i32,
    #[serde(rename = "currency")]
    pub currency: String,
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "transaction_status")]
    pub transaction_status: models::TransactionStatusEnum,
    #[serde(rename = "products", deserialize_with = "Option::deserialize")]
    pub products: Option<Vec<models::ProductModel>>,
    #[serde(rename = "is_done")]
    pub is_done: bool,
    #[serde(rename = "is_escrow")]
    pub is_escrow: bool,
    #[serde(rename = "is_merchant")]
    pub is_merchant: bool,
    #[serde(rename = "checkout_url")]
    pub checkout_url: String,
}

impl GetOneTransaction {
    pub fn new(order_id: String, method_of_payment: Vec<models::Wallet>, amount: i32, amount_to_pay: i32, currency: String, created_at: String, transaction_status: models::TransactionStatusEnum, products: Option<Vec<models::ProductModel>>, is_done: bool, is_escrow: bool, is_merchant: bool, checkout_url: String) -> GetOneTransaction {
        GetOneTransaction {
            order_id,
            method_of_payment,
            amount,
            amount_to_pay,
            currency,
            created_at,
            transaction_status,
            products,
            is_done,
            is_escrow,
            is_merchant,
            checkout_url,
        }
    }
}

